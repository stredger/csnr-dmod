{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "generic-node-s2i-build",
    "annotations": {
      "description": "",
      "tags": "nodejs",
      "iconClass": "icon-nodejs"
    }
  },
  "labels": {
    "template": "nodejs"
  },
  "objects": [
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${FRONTEND_NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
	{
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DOCUMENT_SERVICE_NAME}",
        "annotations": {
          "description": "Microservice used to connect to the Document Service"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${FRONTEND_NAME}",
        "annotations": {
          "description": "Defines how to build the application"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "ExampleMeanApp"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
                "from": {
                    "kind": "ImageStreamTag",
                    "namespace": "${S2I_NAMESPACE}",
                    "name": "nodejs:6"
                },
                "env": [
                ],
                "incremental": true
            }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${FRONTEND_NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          },
          {
            "type": "Generic",
            "generic": {
              "secret": "${GENERIC_WEBHOOK_SECRET}"
            }
          }
        ],
        "postCommit": {
          "script": "npm test"
        }
      }
    }
  ,
	{
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "nodejs-ex",
        "annotations": {
          "description": "Microservice used to connect to the Document Service"
        }
      }
    },
  {
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "nodejs-ex",
        "creationTimestamp": null,
        "labels": {
            "template": "nodejs"
        },
        "annotations": {
            "description": "Defines how to build the application"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "ImageChange",
                "imageChange": {}
            },
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "git": {
                "uri": "${SOURCE_REPOSITORY_URL}"
            },
            "contextDir": "nodejs-ex"
        },
        "strategy": {
            "type": "Source",
            "sourceStrategy": {
                "from": {
                    "kind": "ImageStreamTag",
                    "namespace": "openshift",
                    "name": "nodejs:6"
                },
                "incremental": false
            }
        },
        "output": {
            "to": {
                "kind": "ImageStreamTag",
                "namespace": "csnr-dmod-tools",
                "name": "nodejs-ex:latest"
            }
        },
        "resources": {},
        "postCommit": {
            "script": "npm test"
        },
        "nodeSelector": null
    },
    "status": {
        "lastVersion": 0
    }
},
  {
    "kind": "ImageStream",
    "apiVersion": "v1",
    "metadata": {
        "name": "fis-java-openshift"

    },
     "spec": {
                "dockerImageRepository": "registry.access.redhat.com/jboss-fuse-6/fis-java-openshift",
                "tags": [
                    {
                        "name": "1.0",
                        "annotations": {
                            "description": "JBoss Fuse Integration Services 1.0 Java S2I images.",
                            "iconClass": "icon-jboss",
                            "tags": "builder,jboss-fuse,java,xpaas",
                            "supports":"jboss-fuse:6.2.1,java:8,xpaas:1.2",
                            "version": "1.0"
                        }
                    },
                    {
                        "name": "2.0",
                        "annotations": {
                            "description": "JBoss Fuse Integration Services 2.0 Java S2I images.",
                            "iconClass": "icon-jboss",
                            "tags": "builder,jboss-fuse,java,xpaas",
                            "supports":"jboss-fuse:6.3.0,java:8,xpaas:1.2",
                            "version": "2.0"
                        }
                    }
                ]
            }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "${DOCUMENT_SERVICE_NAME}",
        "creationTimestamp": null,
        "labels": {
            "app": "${DOCUMENT_SERVICE_NAME}"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "ImageChange",
                "imageChange": {}
            },
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "git": {
                "uri": "${SOURCE_REPOSITORY_URL}"
            },
			"secrets":
			[
				{
					"secret": {
						"name": "nrs-libs"
					},
					"destinationDir": "/tmp/1"
				},
				{
					"secret": {
						"name": "oracle-libs"
					},
					"destinationDir": "/tmp/2"
				}
	        ],
            "contextDir": "/DocumentService"
        },
        "strategy": {
            "type": "Source",
            "sourceStrategy": {
                "from": {
                    "kind": "ImageStreamTag",
                    "name": "fis-java-openshift:2.0"
                },
                "forcePull": true
            }
        },
        "output": {
            "to": {
                "kind": "ImageStreamTag",
				"namespace": "csnr-dmod-tools",
                "name": "${DOCUMENT_SERVICE_NAME}:latest"
            }
        },
        "resources": {},
        "postCommit": {},
        "nodeSelector": null
    },
    "status": {
        "lastVersion": 0
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "dmod-pipeline",
        "creationTimestamp": null,
        "labels": {
            "app": "dmod-pipeline",
            "name": "dmod-pipeline",
            "template": "dmod-pipeline"
        }
    },
    "spec": {
        "runPolicy": "Parallel",
        "source": {
            "type": "Git",
            "git": {
                "uri": "${SOURCE_REPOSITORY_URL}",
                "ref": "master"
            }
        },
        "strategy": {
            "type": "JenkinsPipeline",
            "jenkinsPipelineStrategy": {
                "jenkinsfilePath": "Jenkinsfile"
            }
        },
        "output": {},
        "resources": {},
        "postCommit": {},
        "nodeSelector": null
    },
    "status": {
        "lastVersion": 0
    }
},
{
    "kind": "Route",
    "apiVersion": "v1",
    "metadata": {
        "name": "sonarqube",
        "creationTimestamp": null,
        "labels": {
            "app": "sonarqube"
        },
        "annotations": {
            "openshift.io/host.generated": "true"
        }
    },
    "spec": {
        "host": "sonarqube-csnr-dmod-tools.pathfinder.gov.bc.ca",
        "to": {
            "kind": "Service",
            "name": "sonarqube",
            "weight": 100
        },
        "port": {
            "targetPort": "9000-tcp"
        },
        "wildcardPolicy": "None"
    },
    "status": {
        "ingress": [
            {
                "host": "sonarqube-csnr-dmod-tools.pathfinder.gov.bc.ca",
                "routerName": "router",
                "conditions": [
                    {
                        "type": "Admitted",
                        "status": "True",
                        "lastTransitionTime": "2017-06-20T20:59:35Z"
                    }
                ],
                "wildcardPolicy": "None"
            }
        ]
    }
},
{
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "sonarqube-secrets"
      },
      "stringData" : {
        "database-user" : "${SONAR_DATABASE_USER}",
        "database-password" : "${SONAR_DATABASE_PASSWORD}",
		"database-admin-password" : "${SONAR_DATABASE_ADMIN_PASSWORD}",
		"sonar-admin-password" : "${SONAR_ADMIN_PASSWORD}"
      }
    },
	{
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "postgresql-sonarqube-pvc"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${DATABASE_VOLUME_CAPACITY}"
          }
        }
      }
    },
	{
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "sonarqube-data"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "2Gi"
          }
        }
      }
    },
	{
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "postgres",
			"protocol": "TCP",
            "port": 5432,
            "targetPort": 5432,
			"nodePort": 0
          }
        ],
        "selector": {
          "app": "${DATABASE_SERVICE_NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      },
	   "status": {
        "loadBalancer": {}
      }
    },
	{
		"kind": "DeploymentConfig",
		"apiVersion": "v1",
		"metadata": {
			"name": "${DATABASE_SERVICE_NAME}",
			"generation": 1,
			"creationTimestamp": null,
			"labels": {
						"app": "${DATABASE_SERVICE_NAME}"
			},
			"annotations": {
				"description": "Defines how to deploy the database",
				"openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
			}
		},
		"spec": {
			"strategy": {
				"type": "Recreate"
			},
			"triggers": [
				{
					"type": "ConfigChange"
				},
				{
					"type": "ImageChange",
					"imageChangeParams": {
						"automatic": true,
						"containerNames": [
							"postgres"
						],
						"from": {
							"kind": "ImageStreamTag",
							"namespace":  "openshift",
							"name": "postgres:9.4"
						}
					}
				}
			],
			"replicas": 1,
			"test": false,
			"selector": {
				"app": "${DATABASE_SERVICE_NAME}",
				"deploymentconfig": "${DATABASE_SERVICE_NAME}"
			},

			"template": {
				"metadata": {
					"creationTimestamp": null,
					"labels": {
						"app": "${DATABASE_SERVICE_NAME}",
						"deploymentconfig": "${DATABASE_SERVICE_NAME}"
					},
					"annotations": {
						"openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
					}
				},
				"spec": {
					"volumes": [
						{
							"name": "${DATABASE_SERVICE_NAME}-data",
							"persistentVolumeClaim": {
								"claimName": "${DATABASE_SERVICE_NAME}-pvc"
							}
						}
					],
					"containers": [
						{
							"name": "postgres",
							"image": "registry.access.redhat.com/rhscl/postgresql-94-rhel7",
							"ports": [
								{
									"containerPort": 5432,
									"protocol": "TCP"
								}
							],
							"env": [
								{
									"name": "POSTGRESQL_DATABASE",
									"value": "sonarqube"
								},
								{
									"name": "POSTGRESQL_PASSWORD",
									"valueFrom": {
                                      "secretKeyRef" : {
                                        "name" : "sonarqube-secrets",
                                        "key" : "database-password"
										}
                                    }
								},
								{
									"name": "POSTGRESQL_ADMIN_PASSWORD",
									"valueFrom": {
                                      "secretKeyRef" : {
                                        "name" : "sonarqube-secrets",
                                        "key" : "database-admin-password"
										}
                                    }
								},
								{
									"name": "POSTGRESQL_USER",
									"valueFrom": {
                                      "secretKeyRef" : {
                                        "name" : "sonarqube-secrets",
                                        "key" : "database-user"
										}
                                    }
								}
							],
							"readinessProbe": {
								"timeoutSeconds": 1,
							  "initialDelaySeconds": 15,
							  "exec": {
								"command": [ "/bin/sh", "-i", "-c", "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]
							  }
							},
							"livenessProbe": {
							  "timeoutSeconds": 1,
							  "initialDelaySeconds": 30,
							  "tcpSocket": {
								"port": 5432
							  }
							},
							"resources": {},
							"volumeMounts": [
								{
									"name": "${DATABASE_SERVICE_NAME}-data",
									"mountPath": "/var/lib/pgsql/data"
								}
							],
							"terminationMessagePath": "/dev/termination-log",
							"imagePullPolicy": "Always"
						}
					],
					"restartPolicy": "Always",
					"terminationGracePeriodSeconds": 30,
					"dnsPolicy": "ClusterFirst",
					"securityContext": {
                  "capabilities": {},
                  "privileged": false
                }
            },
			"restartPolicy": "Always",
            "dnsPolicy": "ClusterFirst"
		},
		"status": {}
	    }
    },
{
    "kind": "DeploymentConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "sonarqube",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
            "app": "sonarqube"
        }
    },
    "spec": {
        "strategy": {
            "type": "Rolling",
            "rollingParams": {
                "updatePeriodSeconds": 1,
                "intervalSeconds": 1,
                "timeoutSeconds": 600,
                "maxUnavailable": "25%",
                "maxSurge": "25%"
            },
            "resources": {},
            "activeDeadlineSeconds": 21600
        },
        "triggers": [
            {
                "type": "ConfigChange"
            },
            {
                "type": "ImageChange",
                "imageChangeParams": {
                    "automatic": true,
                    "containerNames": [
                        "sonarqube"
                    ],
                    "from": {
                        "kind": "ImageStreamTag",
                        "namespace": "openshift",
                        "name": "sonarqube:6.0"
                    }
                }
            }
        ],
        "replicas": 1,
        "test": false,
        "selector": {
            "app": "sonarqube",
            "deploymentconfig": "sonarqube"
        },
        "template": {
            "metadata": {
                "creationTimestamp": null,
                "labels": {
                    "app": "sonarqube",
                    "deploymentconfig": "sonarqube"
                },
                "annotations": {
                    "openshift.io/container.sonarqube.image.entrypoint": "[\"./bin/run.sh\"]"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "sonarqube-extensions",
                        "persistentVolumeClaim": {
                            "claimName": "sonarqube-data"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "sonarqube",
                        "image": "openshiftdemos/sonarqube@sha256:90bc4c270d3a9f9923ef0b38f7904cfb9c00e4307d4d853e9341a334e8f29cf0",
                        "ports": [
                            {
                                "containerPort": 9000,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "SONARQUBE_JDBC_USERNAME",
                                "valueFrom": {
                                      "secretKeyRef" : {
                                        "name" : "sonarqube-secrets",
                                        "key" : "database-user"
                                    }
                                }
                            },
                            {
                                "name": "SONARQUBE_JDBC_URL",
                                "value": "jdbc:postgresql://${DATABASE_SERVICE_NAME}/sonarqube"
                            },
                            {
                                "name": "SONARQUBE_JDBC_PASSWORD",
                                "valueFrom": {
                                      "secretKeyRef" : {
                                        "name" : "sonarqube-secrets",
                                        "key" : "database-password"
                                    }
                                }
                            },
                            {
                                "name": "SONARQUBE_ADMINPW",
                                "valueFrom": {
                                      "secretKeyRef" : {
                                        "name" : "sonarqube-secrets",
                                        "key" : "sonar-admin-password"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "4Gi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "sonarqube-extensions",
                                "mountPath": "/opt/sonarqube/extensions"
                            }
                        ],
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/",
                                "port": 9000,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "securityContext": {}
            }
        }
    },
    "status": {
        "latestVersion": 0,
        "observedGeneration": 0,
        "replicas": 0,
        "updatedReplicas": 0,
        "availableReplicas": 0,
        "unavailableReplicas": 0
    }
},
{
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
        "name": "sonarqube",
        "creationTimestamp": null,
        "labels": {
            "app": "sonarqube"
        }
    },
    "spec": {
        "ports": [
            {
                "name": "9000-tcp",
                "protocol": "TCP",
                "port": 9000,
                "targetPort": 9000
            }
        ],
        "selector": {
            "app": "sonarqube",
            "deploymentconfig": "sonarqube"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
    },
    "status": {
        "loadBalancer": {}
    }
}


],
  "parameters": [
    {
      "name": "FRONTEND_NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "dmod"
    },
	{
      "name": "DOCUMENT_SERVICE_NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the document service objects defined in this template.",
      "required": true,
      "value": "document-microservice"
    },
    {
      "name": "S2I_NAMESPACE",
      "displayName": "Namespace",
      "description": "The OpenShift Namespace where the S2I ImageStream resides.",
      "value": "openshift"
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "description": "The URL of the repository with your application source code.",
      "value": "https://github.com/stredger/csnr-dmod.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository."
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "A secret string used to configure the GitHub webhook.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "GENERIC_WEBHOOK_SECRET",
      "displayName": "Generic Webhook Secret",
      "description": "A secret string used to configure the Generic webhook.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
	{
      "name": "SONAR_DATABASE_USER",
      "displayName": "DB Username",
      "description": "Username for Sonar Database user that will be used for accessing the database.",
      "generate": "expression",
      "from": "user[A-Z0-9]{3}"
    },
    {
      "name": "SONAR_DATABASE_PASSWORD",
      "displayName": "Database Password",
      "description": "Password for the Sonar Database user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
	{
      "name": "SONAR_DATABASE_ADMIN_PASSWORD",
      "displayName": "Database Admin Password",
      "description": "Password for the Admin Database user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
	{
      "name": "SONAR_ADMIN_PASSWORD",
      "displayName": "Sonar admin password",
      "description": "Password for the Sonar admin user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
	{
      "name": "DATABASE_VOLUME_CAPACITY",
      "displayName": "Database volume capacity",
      "description": "Size of the database used for SonarQube",
      "value": "5Gi"
    },
	{
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database service name",
      "description": "Name of the database service",
      "value": "postgresql-sonarqube"
    }
  ]
}
